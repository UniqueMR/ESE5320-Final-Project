// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lzw_stream_lzw_stream,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=4642,HLS_SYN_LUT=14895,HLS_VERSION=2020_2}" *)

module lzw_stream (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_pp2_stage0 = 9'd32;
parameter    ap_ST_fsm_pp2_stage1 = 9'd64;
parameter    ap_ST_fsm_state12 = 9'd128;
parameter    ap_ST_fsm_state13 = 9'd256;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] s1;
wire   [31:0] length_r;
wire   [63:0] file_buffer;
wire   [63:0] total_bytes;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [8:0] i_2_reg_340;
reg   [8:0] i_2_reg_340_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state6_pp2_stage0_iter0;
wire    ap_block_state8_pp2_stage0_iter1;
wire    ap_block_state10_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
wire   [15:0] add_ln269_fu_368_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] add_ln278_fu_385_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [8:0] i_3_fu_414_p2;
reg   [8:0] i_3_reg_1847;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln297_fu_420_p2;
reg   [0:0] icmp_ln297_reg_1852;
wire   [31:0] add_ln17_2_fu_684_p2;
reg   [31:0] add_ln17_2_reg_1856;
reg   [25:0] lshr_ln18_2_reg_1861;
wire   [25:0] add_ln18_2_fu_718_p2;
reg   [25:0] add_ln18_2_reg_1867;
wire   [14:0] xor_ln17_1_fu_740_p2;
reg   [14:0] xor_ln17_1_reg_1872;
wire   [31:0] add_ln17_5_fu_1063_p2;
reg   [31:0] add_ln17_5_reg_1877;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state7_pp2_stage1_iter0;
wire    ap_block_state9_pp2_stage1_iter1;
wire    ap_block_state11_pp2_stage1_iter2;
wire    ap_block_pp2_stage1_11001;
reg   [25:0] lshr_ln18_5_reg_1882;
wire   [25:0] add_ln18_8_fu_1097_p2;
reg   [25:0] add_ln18_8_reg_1888;
wire   [14:0] add_ln16_11_fu_1103_p2;
reg   [14:0] add_ln16_11_reg_1893;
reg   [14:0] trunc_ln16_1_reg_1898;
wire   [31:0] xor_ln18_8_fu_1409_p2;
reg   [31:0] xor_ln18_8_reg_1903;
wire   [25:0] add_ln18_13_fu_1467_p2;
reg   [25:0] add_ln18_13_reg_1909;
wire   [14:0] add_ln17_19_fu_1473_p2;
reg   [14:0] add_ln17_19_reg_1914;
reg   [14:0] hash_table_addr_1_reg_1919;
wire   [0:0] valid_fu_1680_p3;
reg   [0:0] valid_reg_1924;
reg   [31:0] p_load_reg_1928;
wire   [0:0] icmp_ln85_fu_1721_p2;
reg   [0:0] icmp_ln85_reg_1933;
reg   [8:0] mem_middle_key_mem_addr_reg_1937;
reg   [8:0] mem_lower_key_mem_addr_reg_1942;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state6;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage1_subdone;
reg    ap_enable_reg_pp2_iter2;
reg   [14:0] hash_table_address0;
reg    hash_table_ce0;
reg    hash_table_we0;
reg   [32:0] hash_table_d0;
wire   [32:0] hash_table_q0;
reg   [8:0] my_assoc_mem_upper_key_mem_address0;
reg    my_assoc_mem_upper_key_mem_ce0;
reg    my_assoc_mem_upper_key_mem_we0;
reg   [63:0] my_assoc_mem_upper_key_mem_d0;
wire   [63:0] my_assoc_mem_upper_key_mem_q0;
reg   [8:0] my_assoc_mem_middle_key_mem_address0;
reg    my_assoc_mem_middle_key_mem_ce0;
reg    my_assoc_mem_middle_key_mem_we0;
reg   [63:0] my_assoc_mem_middle_key_mem_d0;
wire   [63:0] my_assoc_mem_middle_key_mem_q0;
reg   [8:0] my_assoc_mem_lower_key_mem_address0;
reg    my_assoc_mem_lower_key_mem_ce0;
reg    my_assoc_mem_lower_key_mem_we0;
reg   [63:0] my_assoc_mem_lower_key_mem_d0;
wire   [63:0] my_assoc_mem_lower_key_mem_q0;
reg   [5:0] my_assoc_mem_value_address0;
reg    my_assoc_mem_value_ce0;
reg    my_assoc_mem_value_we0;
reg   [11:0] my_assoc_mem_value_d0;
wire   [11:0] my_assoc_mem_value_q0;
wire    grp_hardware_encoder_fu_352_ap_start;
wire    grp_hardware_encoder_fu_352_ap_done;
wire    grp_hardware_encoder_fu_352_ap_idle;
wire    grp_hardware_encoder_fu_352_ap_ready;
wire    grp_hardware_encoder_fu_352_m_axi_gmem_AWVALID;
wire   [63:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWADDR;
wire   [0:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWID;
wire   [31:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWLEN;
wire   [2:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWSIZE;
wire   [1:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWBURST;
wire   [1:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWLOCK;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWCACHE;
wire   [2:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWPROT;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWQOS;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWREGION;
wire   [0:0] grp_hardware_encoder_fu_352_m_axi_gmem_AWUSER;
wire    grp_hardware_encoder_fu_352_m_axi_gmem_WVALID;
wire   [31:0] grp_hardware_encoder_fu_352_m_axi_gmem_WDATA;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_WSTRB;
wire    grp_hardware_encoder_fu_352_m_axi_gmem_WLAST;
wire   [0:0] grp_hardware_encoder_fu_352_m_axi_gmem_WID;
wire   [0:0] grp_hardware_encoder_fu_352_m_axi_gmem_WUSER;
wire    grp_hardware_encoder_fu_352_m_axi_gmem_ARVALID;
wire   [63:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARADDR;
wire   [0:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARID;
wire   [31:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARLEN;
wire   [2:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARSIZE;
wire   [1:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARBURST;
wire   [1:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARLOCK;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARCACHE;
wire   [2:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARPROT;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARQOS;
wire   [3:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARREGION;
wire   [0:0] grp_hardware_encoder_fu_352_m_axi_gmem_ARUSER;
wire    grp_hardware_encoder_fu_352_m_axi_gmem_RREADY;
wire    grp_hardware_encoder_fu_352_m_axi_gmem_BREADY;
wire   [14:0] grp_hardware_encoder_fu_352_hash_table_address0;
wire    grp_hardware_encoder_fu_352_hash_table_ce0;
wire    grp_hardware_encoder_fu_352_hash_table_we0;
wire   [32:0] grp_hardware_encoder_fu_352_hash_table_d0;
wire   [8:0] grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_address0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_ce0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_we0;
wire   [63:0] grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_d0;
wire   [8:0] grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_address0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_ce0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_we0;
wire   [63:0] grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_d0;
wire   [8:0] grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_address0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_ce0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_we0;
wire   [63:0] grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_d0;
wire   [5:0] grp_hardware_encoder_fu_352_my_assoc_mem_value_address0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_value_ce0;
wire    grp_hardware_encoder_fu_352_my_assoc_mem_value_we0;
wire   [11:0] grp_hardware_encoder_fu_352_my_assoc_mem_value_d0;
reg   [15:0] i_reg_318;
wire   [0:0] icmp_ln269_fu_374_p2;
reg    ap_block_state1;
reg   [9:0] i_1_reg_329;
wire   [0:0] icmp_ln278_fu_391_p2;
wire    ap_CS_fsm_state3;
reg   [8:0] ap_phi_mux_i_2_phi_fu_344_p4;
wire    ap_block_pp2_stage0;
reg    grp_hardware_encoder_fu_352_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [63:0] i_cast_fu_380_p1;
wire   [63:0] i_1_cast_fu_397_p1;
wire   [63:0] zext_ln60_fu_1655_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln88_fu_1727_p1;
wire   [63:0] zext_ln89_fu_1732_p1;
wire   [63:0] zext_ln90_fu_1737_p1;
reg   [31:0] empty_48_fu_194;
wire   [31:0] add_ln91_fu_1742_p2;
reg   [31:0] my_assoc_mem_fill_fu_198;
wire   [32:0] or_ln1_fu_1688_p6;
wire   [63:0] or_ln87_fu_1767_p2;
wire   [63:0] or_ln88_fu_1774_p2;
wire   [63:0] or_ln89_fu_1781_p2;
wire   [11:0] zext_ln79_fu_1706_p1;
wire   [0:0] trunc_ln301_1_fu_426_p1;
wire   [10:0] or_ln_fu_430_p6;
wire   [0:0] tmp_fu_448_p3;
wire   [11:0] zext_ln16_1_fu_456_p1;
wire   [11:0] zext_ln16_fu_444_p1;
wire   [11:0] add_ln16_fu_460_p2;
wire   [21:0] shl_ln_fu_470_p3;
wire   [21:0] zext_ln17_fu_466_p1;
wire   [21:0] add_ln17_fu_478_p2;
wire   [15:0] lshr_ln_fu_484_p4;
wire   [21:0] zext_ln18_fu_494_p1;
wire   [21:0] xor_ln18_fu_498_p2;
wire   [0:0] tmp_1_fu_508_p3;
wire   [22:0] zext_ln16_3_fu_516_p1;
wire   [22:0] zext_ln16_2_fu_504_p1;
wire   [22:0] add_ln16_1_fu_520_p2;
wire   [21:0] trunc_ln17_fu_530_p1;
wire   [15:0] trunc_ln17_13_fu_546_p1;
wire   [31:0] shl_ln17_1_fu_534_p3;
wire   [31:0] zext_ln17_1_fu_526_p1;
wire   [31:0] add_ln17_1_fu_558_p2;
wire   [25:0] lshr_ln18_1_fu_564_p4;
wire   [4:0] trunc_ln18_2_fu_582_p1;
wire   [25:0] trunc_ln1_fu_550_p3;
wire   [25:0] zext_ln17_2_fu_542_p1;
wire   [31:0] zext_ln18_1_fu_574_p1;
wire   [0:0] tmp_2_fu_606_p3;
wire   [14:0] trunc_ln18_1_fu_586_p3;
wire   [14:0] trunc_ln18_fu_578_p1;
wire   [25:0] add_ln18_fu_594_p2;
wire   [31:0] zext_ln16_4_fu_614_p1;
wire   [31:0] xor_ln18_1_fu_600_p2;
wire   [31:0] add_ln16_2_fu_644_p2;
wire   [14:0] trunc_ln16_4_fu_624_p4;
wire   [14:0] add_ln16_7_fu_618_p2;
wire   [25:0] zext_ln16_5_fu_640_p1;
wire   [25:0] xor_ln16_fu_634_p2;
wire   [15:0] trunc_ln17_14_fu_672_p1;
wire   [31:0] shl_ln17_fu_650_p2;
wire   [14:0] zext_ln17_3_fu_662_p1;
wire   [14:0] xor_ln17_fu_656_p2;
wire   [4:0] trunc_ln18_4_fu_706_p1;
wire   [25:0] trunc_ln17_1_fu_676_p3;
wire   [25:0] add_ln17_11_fu_666_p2;
wire   [14:0] trunc_ln18_3_fu_710_p3;
wire   [14:0] add_ln18_1_fu_700_p2;
wire   [14:0] trunc_ln16_6_fu_730_p4;
wire   [14:0] add_ln16_8_fu_724_p2;
wire   [31:0] zext_ln18_2_fu_746_p1;
wire   [0:0] tmp_3_fu_754_p3;
wire   [31:0] zext_ln16_6_fu_762_p1;
wire   [31:0] xor_ln18_2_fu_749_p2;
wire   [31:0] add_ln16_3_fu_774_p2;
wire   [25:0] zext_ln16_7_fu_770_p1;
wire   [25:0] xor_ln16_1_fu_766_p2;
wire   [15:0] trunc_ln17_15_fu_796_p1;
wire   [31:0] shl_ln17_2_fu_780_p2;
wire   [31:0] add_ln17_3_fu_808_p2;
wire   [25:0] lshr_ln18_3_fu_814_p4;
wire   [14:0] zext_ln17_4_fu_786_p1;
wire   [4:0] trunc_ln18_6_fu_833_p1;
wire   [25:0] trunc_ln17_2_fu_800_p3;
wire   [25:0] add_ln17_12_fu_790_p2;
wire   [31:0] zext_ln18_3_fu_824_p1;
wire   [0:0] tmp_4_fu_857_p3;
wire   [14:0] trunc_ln18_5_fu_837_p3;
wire   [14:0] add_ln18_3_fu_828_p2;
wire   [25:0] add_ln18_4_fu_845_p2;
wire   [31:0] zext_ln16_8_fu_865_p1;
wire   [31:0] xor_ln18_3_fu_851_p2;
wire   [31:0] add_ln16_4_fu_895_p2;
wire   [14:0] trunc_ln16_8_fu_875_p4;
wire   [14:0] add_ln16_9_fu_869_p2;
wire   [25:0] zext_ln16_9_fu_891_p1;
wire   [25:0] xor_ln16_2_fu_885_p2;
wire   [15:0] trunc_ln17_16_fu_923_p1;
wire   [31:0] shl_ln17_3_fu_901_p2;
wire   [31:0] add_ln17_4_fu_935_p2;
wire   [25:0] lshr_ln18_4_fu_941_p4;
wire   [14:0] zext_ln17_5_fu_913_p1;
wire   [14:0] xor_ln17_2_fu_907_p2;
wire   [4:0] trunc_ln18_8_fu_961_p1;
wire   [25:0] trunc_ln17_3_fu_927_p3;
wire   [25:0] add_ln17_13_fu_917_p2;
wire   [31:0] zext_ln18_4_fu_951_p1;
wire   [0:0] tmp_5_fu_985_p3;
wire   [14:0] trunc_ln18_7_fu_965_p3;
wire   [14:0] add_ln18_5_fu_955_p2;
wire   [25:0] add_ln18_6_fu_973_p2;
wire   [31:0] zext_ln16_10_fu_993_p1;
wire   [31:0] xor_ln18_4_fu_979_p2;
wire   [31:0] add_ln16_5_fu_1023_p2;
wire   [14:0] trunc_ln16_s_fu_1003_p4;
wire   [14:0] add_ln16_10_fu_997_p2;
wire   [25:0] zext_ln16_11_fu_1019_p1;
wire   [25:0] xor_ln16_3_fu_1013_p2;
wire   [15:0] trunc_ln17_17_fu_1051_p1;
wire   [31:0] shl_ln17_4_fu_1029_p2;
wire   [14:0] zext_ln17_6_fu_1041_p1;
wire   [14:0] xor_ln17_3_fu_1035_p2;
wire   [4:0] trunc_ln18_11_fu_1085_p1;
wire   [25:0] trunc_ln17_4_fu_1055_p3;
wire   [25:0] add_ln17_14_fu_1045_p2;
wire   [14:0] trunc_ln18_9_fu_1089_p3;
wire   [14:0] add_ln18_7_fu_1079_p2;
wire   [31:0] zext_ln18_5_fu_1119_p1;
wire   [0:0] tmp_6_fu_1127_p3;
wire   [31:0] zext_ln16_12_fu_1135_p1;
wire   [31:0] xor_ln18_5_fu_1122_p2;
wire   [31:0] add_ln16_6_fu_1147_p2;
wire   [25:0] zext_ln16_13_fu_1143_p1;
wire   [25:0] xor_ln16_4_fu_1139_p2;
wire   [15:0] trunc_ln17_18_fu_1173_p1;
wire   [31:0] shl_ln17_5_fu_1153_p2;
wire   [31:0] add_ln17_6_fu_1185_p2;
wire   [25:0] lshr_ln18_6_fu_1191_p4;
wire   [14:0] zext_ln17_7_fu_1163_p1;
wire   [14:0] xor_ln17_4_fu_1159_p2;
wire   [4:0] trunc_ln18_13_fu_1211_p1;
wire   [25:0] trunc_ln17_5_fu_1177_p3;
wire   [25:0] add_ln17_15_fu_1167_p2;
wire   [31:0] zext_ln18_6_fu_1201_p1;
wire   [31:0] xor_ln18_6_fu_1229_p2;
wire   [14:0] trunc_ln18_s_fu_1215_p3;
wire   [14:0] add_ln18_9_fu_1205_p2;
wire   [25:0] add_ln18_10_fu_1223_p2;
wire   [15:0] trunc_ln17_19_fu_1263_p1;
wire   [31:0] shl_ln17_6_fu_1235_p2;
wire   [31:0] add_ln17_7_fu_1275_p2;
wire   [25:0] lshr_ln18_7_fu_1281_p4;
wire   [14:0] trunc_ln17_6_fu_1247_p4;
wire   [14:0] add_ln17_16_fu_1241_p2;
wire   [4:0] trunc_ln18_15_fu_1301_p1;
wire   [25:0] trunc_ln17_7_fu_1267_p3;
wire   [25:0] xor_ln17_5_fu_1257_p2;
wire   [31:0] zext_ln18_7_fu_1291_p1;
wire   [31:0] xor_ln18_7_fu_1319_p2;
wire   [14:0] trunc_ln18_10_fu_1305_p3;
wire   [14:0] xor_ln18_11_fu_1295_p2;
wire   [25:0] add_ln18_11_fu_1313_p2;
wire   [15:0] trunc_ln17_20_fu_1353_p1;
wire   [31:0] shl_ln17_7_fu_1325_p2;
wire   [31:0] add_ln17_8_fu_1365_p2;
wire   [25:0] lshr_ln18_8_fu_1371_p4;
wire   [14:0] trunc_ln17_8_fu_1337_p4;
wire   [14:0] add_ln17_17_fu_1331_p2;
wire   [4:0] trunc_ln18_17_fu_1391_p1;
wire   [25:0] trunc_ln17_9_fu_1357_p3;
wire   [25:0] xor_ln17_6_fu_1347_p2;
wire   [31:0] zext_ln18_8_fu_1381_p1;
wire   [14:0] trunc_ln18_12_fu_1395_p3;
wire   [14:0] xor_ln18_12_fu_1385_p2;
wire   [25:0] add_ln18_12_fu_1403_p2;
wire   [15:0] trunc_ln17_21_fu_1437_p1;
wire   [14:0] trunc_ln17_s_fu_1421_p4;
wire   [14:0] add_ln17_18_fu_1415_p2;
wire   [4:0] trunc_ln18_21_fu_1455_p1;
wire   [25:0] trunc_ln17_10_fu_1441_p3;
wire   [25:0] xor_ln17_7_fu_1431_p2;
wire   [14:0] trunc_ln18_14_fu_1459_p3;
wire   [14:0] xor_ln18_13_fu_1449_p2;
wire   [31:0] shl_ln17_8_fu_1479_p2;
wire   [31:0] add_ln17_9_fu_1484_p2;
wire   [25:0] lshr_ln18_9_fu_1489_p4;
wire   [31:0] zext_ln18_9_fu_1499_p1;
wire   [31:0] xor_ln18_9_fu_1503_p2;
wire   [15:0] trunc_ln17_22_fu_1530_p1;
wire   [31:0] shl_ln17_9_fu_1509_p2;
wire   [14:0] trunc_ln17_11_fu_1515_p4;
wire   [4:0] trunc_ln18_22_fu_1553_p1;
wire   [25:0] trunc_ln17_12_fu_1534_p3;
wire   [25:0] xor_ln17_8_fu_1525_p2;
wire   [31:0] add_ln17_10_fu_1542_p2;
wire   [14:0] trunc_ln18_16_fu_1557_p3;
wire   [14:0] xor_ln18_14_fu_1548_p2;
wire   [25:0] trunc_ln18_18_fu_1571_p4;
wire   [25:0] add_ln18_14_fu_1565_p2;
wire   [25:0] xor_ln18_10_fu_1597_p2;
wire   [14:0] trunc_ln18_19_fu_1587_p4;
wire   [14:0] add_ln18_15_fu_1581_p2;
wire   [11:0] trunc_ln20_fu_1615_p1;
wire   [25:0] shl_ln20_fu_1603_p2;
wire   [14:0] trunc_ln3_fu_1619_p3;
wire   [14:0] xor_ln20_fu_1609_p2;
wire   [25:0] hashed_fu_1627_p2;
wire   [14:0] trunc_ln4_fu_1639_p4;
wire   [14:0] add_ln10_fu_1633_p2;
wire   [14:0] hashed_1_fu_1649_p2;
wire   [7:0] value_fu_1660_p1;
wire   [25:0] tmp_8_fu_1711_p4;
wire   [6:0] trunc_ln_fu_1670_p4;
wire   [8:0] shl_ln301_fu_1664_p2;
wire   [31:0] shl_ln87_fu_1758_p2;
wire  signed [63:0] sext_ln87_fu_1763_p1;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 grp_hardware_encoder_fu_352_ap_start_reg = 1'b0;
end

lzw_stream_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .s1(s1),
    .length_r(length_r),
    .file_buffer(file_buffer),
    .total_bytes(total_bytes),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

lzw_stream_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(grp_hardware_encoder_fu_352_m_axi_gmem_ARADDR),
    .I_ARID(grp_hardware_encoder_fu_352_m_axi_gmem_ARID),
    .I_ARLEN(grp_hardware_encoder_fu_352_m_axi_gmem_ARLEN),
    .I_ARSIZE(grp_hardware_encoder_fu_352_m_axi_gmem_ARSIZE),
    .I_ARLOCK(grp_hardware_encoder_fu_352_m_axi_gmem_ARLOCK),
    .I_ARCACHE(grp_hardware_encoder_fu_352_m_axi_gmem_ARCACHE),
    .I_ARQOS(grp_hardware_encoder_fu_352_m_axi_gmem_ARQOS),
    .I_ARPROT(grp_hardware_encoder_fu_352_m_axi_gmem_ARPROT),
    .I_ARUSER(grp_hardware_encoder_fu_352_m_axi_gmem_ARUSER),
    .I_ARBURST(grp_hardware_encoder_fu_352_m_axi_gmem_ARBURST),
    .I_ARREGION(grp_hardware_encoder_fu_352_m_axi_gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(grp_hardware_encoder_fu_352_m_axi_gmem_AWADDR),
    .I_AWID(grp_hardware_encoder_fu_352_m_axi_gmem_AWID),
    .I_AWLEN(grp_hardware_encoder_fu_352_m_axi_gmem_AWLEN),
    .I_AWSIZE(grp_hardware_encoder_fu_352_m_axi_gmem_AWSIZE),
    .I_AWLOCK(grp_hardware_encoder_fu_352_m_axi_gmem_AWLOCK),
    .I_AWCACHE(grp_hardware_encoder_fu_352_m_axi_gmem_AWCACHE),
    .I_AWQOS(grp_hardware_encoder_fu_352_m_axi_gmem_AWQOS),
    .I_AWPROT(grp_hardware_encoder_fu_352_m_axi_gmem_AWPROT),
    .I_AWUSER(grp_hardware_encoder_fu_352_m_axi_gmem_AWUSER),
    .I_AWBURST(grp_hardware_encoder_fu_352_m_axi_gmem_AWBURST),
    .I_AWREGION(grp_hardware_encoder_fu_352_m_axi_gmem_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(grp_hardware_encoder_fu_352_m_axi_gmem_WDATA),
    .I_WID(grp_hardware_encoder_fu_352_m_axi_gmem_WID),
    .I_WUSER(grp_hardware_encoder_fu_352_m_axi_gmem_WUSER),
    .I_WLAST(grp_hardware_encoder_fu_352_m_axi_gmem_WLAST),
    .I_WSTRB(grp_hardware_encoder_fu_352_m_axi_gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

lzw_stream_hash_table #(
    .DataWidth( 33 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
hash_table_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hash_table_address0),
    .ce0(hash_table_ce0),
    .we0(hash_table_we0),
    .d0(hash_table_d0),
    .q0(hash_table_q0)
);

lzw_stream_my_assoc_mem_upper_key_mem #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
my_assoc_mem_upper_key_mem_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(my_assoc_mem_upper_key_mem_address0),
    .ce0(my_assoc_mem_upper_key_mem_ce0),
    .we0(my_assoc_mem_upper_key_mem_we0),
    .d0(my_assoc_mem_upper_key_mem_d0),
    .q0(my_assoc_mem_upper_key_mem_q0)
);

lzw_stream_my_assoc_mem_upper_key_mem #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
my_assoc_mem_middle_key_mem_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(my_assoc_mem_middle_key_mem_address0),
    .ce0(my_assoc_mem_middle_key_mem_ce0),
    .we0(my_assoc_mem_middle_key_mem_we0),
    .d0(my_assoc_mem_middle_key_mem_d0),
    .q0(my_assoc_mem_middle_key_mem_q0)
);

lzw_stream_my_assoc_mem_upper_key_mem #(
    .DataWidth( 64 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
my_assoc_mem_lower_key_mem_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(my_assoc_mem_lower_key_mem_address0),
    .ce0(my_assoc_mem_lower_key_mem_ce0),
    .we0(my_assoc_mem_lower_key_mem_we0),
    .d0(my_assoc_mem_lower_key_mem_d0),
    .q0(my_assoc_mem_lower_key_mem_q0)
);

lzw_stream_my_assoc_mem_value #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
my_assoc_mem_value_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(my_assoc_mem_value_address0),
    .ce0(my_assoc_mem_value_ce0),
    .we0(my_assoc_mem_value_we0),
    .d0(my_assoc_mem_value_d0),
    .q0(my_assoc_mem_value_q0)
);

lzw_stream_hardware_encoder grp_hardware_encoder_fu_352(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_hardware_encoder_fu_352_ap_start),
    .ap_done(grp_hardware_encoder_fu_352_ap_done),
    .ap_idle(grp_hardware_encoder_fu_352_ap_idle),
    .ap_ready(grp_hardware_encoder_fu_352_ap_ready),
    .m_axi_gmem_AWVALID(grp_hardware_encoder_fu_352_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_hardware_encoder_fu_352_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_hardware_encoder_fu_352_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_hardware_encoder_fu_352_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_hardware_encoder_fu_352_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_hardware_encoder_fu_352_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_hardware_encoder_fu_352_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_hardware_encoder_fu_352_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_hardware_encoder_fu_352_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_hardware_encoder_fu_352_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_hardware_encoder_fu_352_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_hardware_encoder_fu_352_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_hardware_encoder_fu_352_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_hardware_encoder_fu_352_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_hardware_encoder_fu_352_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_hardware_encoder_fu_352_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_hardware_encoder_fu_352_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_hardware_encoder_fu_352_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_hardware_encoder_fu_352_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_hardware_encoder_fu_352_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_hardware_encoder_fu_352_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_hardware_encoder_fu_352_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_hardware_encoder_fu_352_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_hardware_encoder_fu_352_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_hardware_encoder_fu_352_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_hardware_encoder_fu_352_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_hardware_encoder_fu_352_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_hardware_encoder_fu_352_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_hardware_encoder_fu_352_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_hardware_encoder_fu_352_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_hardware_encoder_fu_352_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_hardware_encoder_fu_352_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .s1(s1),
    .length_r(length_r),
    .file_buffer(file_buffer),
    .total_bytes(total_bytes),
    .hash_table_address0(grp_hardware_encoder_fu_352_hash_table_address0),
    .hash_table_ce0(grp_hardware_encoder_fu_352_hash_table_ce0),
    .hash_table_we0(grp_hardware_encoder_fu_352_hash_table_we0),
    .hash_table_d0(grp_hardware_encoder_fu_352_hash_table_d0),
    .hash_table_q0(hash_table_q0),
    .my_assoc_mem_upper_key_mem_address0(grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_address0),
    .my_assoc_mem_upper_key_mem_ce0(grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_ce0),
    .my_assoc_mem_upper_key_mem_we0(grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_we0),
    .my_assoc_mem_upper_key_mem_d0(grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_d0),
    .my_assoc_mem_upper_key_mem_q0(my_assoc_mem_upper_key_mem_q0),
    .my_assoc_mem_middle_key_mem_address0(grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_address0),
    .my_assoc_mem_middle_key_mem_ce0(grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_ce0),
    .my_assoc_mem_middle_key_mem_we0(grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_we0),
    .my_assoc_mem_middle_key_mem_d0(grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_d0),
    .my_assoc_mem_middle_key_mem_q0(my_assoc_mem_middle_key_mem_q0),
    .my_assoc_mem_lower_key_mem_address0(grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_address0),
    .my_assoc_mem_lower_key_mem_ce0(grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_ce0),
    .my_assoc_mem_lower_key_mem_we0(grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_we0),
    .my_assoc_mem_lower_key_mem_d0(grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_d0),
    .my_assoc_mem_lower_key_mem_q0(my_assoc_mem_lower_key_mem_q0),
    .my_assoc_mem_value_address0(grp_hardware_encoder_fu_352_my_assoc_mem_value_address0),
    .my_assoc_mem_value_ce0(grp_hardware_encoder_fu_352_my_assoc_mem_value_ce0),
    .my_assoc_mem_value_we0(grp_hardware_encoder_fu_352_my_assoc_mem_value_we0),
    .my_assoc_mem_value_d0(grp_hardware_encoder_fu_352_my_assoc_mem_value_d0),
    .my_assoc_mem_value_q0(my_assoc_mem_value_q0),
    .my_assoc_mem_fill_read(my_assoc_mem_fill_fu_198)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_hardware_encoder_fu_352_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_hardware_encoder_fu_352_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_hardware_encoder_fu_352_ap_start_reg <= 1'b1;
        end else if ((grp_hardware_encoder_fu_352_ap_ready == 1'b1)) begin
            grp_hardware_encoder_fu_352_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_48_fu_194 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln85_fu_1721_p2 == 1'd1) & (valid_fu_1680_p3 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        empty_48_fu_194 <= add_ln91_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_reg_329 <= 10'd0;
    end else if (((icmp_ln278_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_1_reg_329 <= add_ln278_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_2_reg_340 <= 9'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln297_reg_1852 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_340 <= i_3_reg_1847;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_318 <= 16'd0;
    end else if (((icmp_ln269_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_318 <= add_ln269_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        my_assoc_mem_fill_fu_198 <= 32'd0;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln85_fu_1721_p2 == 1'd1) & (valid_fu_1680_p3 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_fill_fu_198 <= add_ln91_fu_1742_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln297_reg_1852 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln16_11_reg_1893 <= add_ln16_11_fu_1103_p2;
        add_ln17_5_reg_1877 <= add_ln17_5_fu_1063_p2;
        add_ln18_8_reg_1888 <= add_ln18_8_fu_1097_p2;
        lshr_ln18_5_reg_1882 <= {{add_ln17_5_fu_1063_p2[31:6]}};
        trunc_ln16_1_reg_1898 <= {{add_ln17_5_fu_1063_p2[20:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln17_19_reg_1914 <= add_ln17_19_fu_1473_p2;
        add_ln18_13_reg_1909 <= add_ln18_13_fu_1467_p2;
        i_2_reg_340_pp2_iter1_reg <= i_2_reg_340;
        icmp_ln297_reg_1852 <= icmp_ln297_fu_420_p2;
        valid_reg_1924 <= hash_table_q0[32'd32];
        xor_ln18_8_reg_1903 <= xor_ln18_8_fu_1409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln297_fu_420_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln17_2_reg_1856 <= add_ln17_2_fu_684_p2;
        add_ln18_2_reg_1867 <= add_ln18_2_fu_718_p2;
        lshr_ln18_2_reg_1861 <= {{add_ln17_2_fu_684_p2[31:6]}};
        xor_ln17_1_reg_1872 <= xor_ln17_1_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        hash_table_addr_1_reg_1919 <= zext_ln60_fu_1655_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_3_reg_1847 <= i_3_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((valid_fu_1680_p3 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln85_reg_1933 <= icmp_ln85_fu_1721_p2;
        p_load_reg_1928 <= empty_48_fu_194;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_1721_p2 == 1'd1) & (valid_fu_1680_p3 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        mem_lower_key_mem_addr_reg_1942[8] <= zext_ln89_fu_1732_p1[8];
        mem_middle_key_mem_addr_reg_1937[6 : 0] <= zext_ln88_fu_1727_p1[6 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln297_fu_420_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_hardware_encoder_fu_352_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln297_reg_1852 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_2_phi_fu_344_p4 = i_3_reg_1847;
    end else begin
        ap_phi_mux_i_2_phi_fu_344_p4 = i_2_reg_340;
    end
end

always @ (*) begin
    if (((grp_hardware_encoder_fu_352_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem_ARVALID = grp_hardware_encoder_fu_352_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem_AWVALID = grp_hardware_encoder_fu_352_m_axi_gmem_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem_BREADY = grp_hardware_encoder_fu_352_m_axi_gmem_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem_RREADY = grp_hardware_encoder_fu_352_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        gmem_WVALID = grp_hardware_encoder_fu_352_m_axi_gmem_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        hash_table_address0 = hash_table_addr_1_reg_1919;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        hash_table_address0 = zext_ln60_fu_1655_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hash_table_address0 = i_cast_fu_380_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_table_address0 = grp_hardware_encoder_fu_352_hash_table_address0;
    end else begin
        hash_table_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
        hash_table_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_table_ce0 = grp_hardware_encoder_fu_352_hash_table_ce0;
    end else begin
        hash_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        hash_table_d0 = or_ln1_fu_1688_p6;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hash_table_d0 = 33'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_table_d0 = grp_hardware_encoder_fu_352_hash_table_d0;
    end else begin
        hash_table_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (valid_fu_1680_p3 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln269_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        hash_table_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        hash_table_we0 = grp_hardware_encoder_fu_352_hash_table_we0;
    end else begin
        hash_table_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        my_assoc_mem_lower_key_mem_address0 = mem_lower_key_mem_addr_reg_1942;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_lower_key_mem_address0 = zext_ln89_fu_1732_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        my_assoc_mem_lower_key_mem_address0 = i_1_cast_fu_397_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_lower_key_mem_address0 = grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_address0;
    end else begin
        my_assoc_mem_lower_key_mem_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        my_assoc_mem_lower_key_mem_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_lower_key_mem_ce0 = grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_ce0;
    end else begin
        my_assoc_mem_lower_key_mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        my_assoc_mem_lower_key_mem_d0 = or_ln89_fu_1781_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        my_assoc_mem_lower_key_mem_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_lower_key_mem_d0 = grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_d0;
    end else begin
        my_assoc_mem_lower_key_mem_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln85_reg_1933 == 1'd1) & (valid_reg_1924 == 1'd1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((icmp_ln278_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        my_assoc_mem_lower_key_mem_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_lower_key_mem_we0 = grp_hardware_encoder_fu_352_my_assoc_mem_lower_key_mem_we0;
    end else begin
        my_assoc_mem_lower_key_mem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        my_assoc_mem_middle_key_mem_address0 = mem_middle_key_mem_addr_reg_1937;
    end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_middle_key_mem_address0 = zext_ln88_fu_1727_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        my_assoc_mem_middle_key_mem_address0 = i_1_cast_fu_397_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_middle_key_mem_address0 = grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_address0;
    end else begin
        my_assoc_mem_middle_key_mem_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        my_assoc_mem_middle_key_mem_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_middle_key_mem_ce0 = grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_ce0;
    end else begin
        my_assoc_mem_middle_key_mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        my_assoc_mem_middle_key_mem_d0 = or_ln88_fu_1774_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        my_assoc_mem_middle_key_mem_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_middle_key_mem_d0 = grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_d0;
    end else begin
        my_assoc_mem_middle_key_mem_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln85_reg_1933 == 1'd1) & (valid_reg_1924 == 1'd1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((icmp_ln278_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        my_assoc_mem_middle_key_mem_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_middle_key_mem_we0 = grp_hardware_encoder_fu_352_my_assoc_mem_middle_key_mem_we0;
    end else begin
        my_assoc_mem_middle_key_mem_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        my_assoc_mem_upper_key_mem_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        my_assoc_mem_upper_key_mem_address0 = i_1_cast_fu_397_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_upper_key_mem_address0 = grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_address0;
    end else begin
        my_assoc_mem_upper_key_mem_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        my_assoc_mem_upper_key_mem_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_upper_key_mem_ce0 = grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_ce0;
    end else begin
        my_assoc_mem_upper_key_mem_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        my_assoc_mem_upper_key_mem_d0 = or_ln87_fu_1767_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        my_assoc_mem_upper_key_mem_d0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_upper_key_mem_d0 = grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_d0;
    end else begin
        my_assoc_mem_upper_key_mem_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln85_reg_1933 == 1'd1) & (valid_reg_1924 == 1'd1) & (1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((icmp_ln278_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        my_assoc_mem_upper_key_mem_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_upper_key_mem_we0 = grp_hardware_encoder_fu_352_my_assoc_mem_upper_key_mem_we0;
    end else begin
        my_assoc_mem_upper_key_mem_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_value_address0 = zext_ln90_fu_1737_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_value_address0 = grp_hardware_encoder_fu_352_my_assoc_mem_value_address0;
    end else begin
        my_assoc_mem_value_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_value_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_value_ce0 = grp_hardware_encoder_fu_352_my_assoc_mem_value_ce0;
    end else begin
        my_assoc_mem_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_value_d0 = zext_ln79_fu_1706_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_value_d0 = grp_hardware_encoder_fu_352_my_assoc_mem_value_d0;
    end else begin
        my_assoc_mem_value_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln85_fu_1721_p2 == 1'd1) & (valid_fu_1680_p3 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        my_assoc_mem_value_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        my_assoc_mem_value_we0 = grp_hardware_encoder_fu_352_my_assoc_mem_value_we0;
    end else begin
        my_assoc_mem_value_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln269_fu_374_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln278_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln297_fu_420_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln297_fu_420_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_hardware_encoder_fu_352_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_1633_p2 = (trunc_ln3_fu_1619_p3 + xor_ln20_fu_1609_p2);

assign add_ln16_10_fu_997_p2 = (trunc_ln18_7_fu_965_p3 + add_ln18_5_fu_955_p2);

assign add_ln16_11_fu_1103_p2 = (trunc_ln18_9_fu_1089_p3 + add_ln18_7_fu_1079_p2);

assign add_ln16_1_fu_520_p2 = (zext_ln16_3_fu_516_p1 + zext_ln16_2_fu_504_p1);

assign add_ln16_2_fu_644_p2 = (zext_ln16_4_fu_614_p1 + xor_ln18_1_fu_600_p2);

assign add_ln16_3_fu_774_p2 = (zext_ln16_6_fu_762_p1 + xor_ln18_2_fu_749_p2);

assign add_ln16_4_fu_895_p2 = (zext_ln16_8_fu_865_p1 + xor_ln18_3_fu_851_p2);

assign add_ln16_5_fu_1023_p2 = (zext_ln16_10_fu_993_p1 + xor_ln18_4_fu_979_p2);

assign add_ln16_6_fu_1147_p2 = (zext_ln16_12_fu_1135_p1 + xor_ln18_5_fu_1122_p2);

assign add_ln16_7_fu_618_p2 = (trunc_ln18_1_fu_586_p3 + trunc_ln18_fu_578_p1);

assign add_ln16_8_fu_724_p2 = (trunc_ln18_3_fu_710_p3 + add_ln18_1_fu_700_p2);

assign add_ln16_9_fu_869_p2 = (trunc_ln18_5_fu_837_p3 + add_ln18_3_fu_828_p2);

assign add_ln16_fu_460_p2 = (zext_ln16_1_fu_456_p1 + zext_ln16_fu_444_p1);

assign add_ln17_10_fu_1542_p2 = (shl_ln17_9_fu_1509_p2 + xor_ln18_9_fu_1503_p2);

assign add_ln17_11_fu_666_p2 = (zext_ln16_5_fu_640_p1 + xor_ln16_fu_634_p2);

assign add_ln17_12_fu_790_p2 = (zext_ln16_7_fu_770_p1 + xor_ln16_1_fu_766_p2);

assign add_ln17_13_fu_917_p2 = (zext_ln16_9_fu_891_p1 + xor_ln16_2_fu_885_p2);

assign add_ln17_14_fu_1045_p2 = (zext_ln16_11_fu_1019_p1 + xor_ln16_3_fu_1013_p2);

assign add_ln17_15_fu_1167_p2 = (zext_ln16_13_fu_1143_p1 + xor_ln16_4_fu_1139_p2);

assign add_ln17_16_fu_1241_p2 = (trunc_ln18_s_fu_1215_p3 + add_ln18_9_fu_1205_p2);

assign add_ln17_17_fu_1331_p2 = (trunc_ln18_10_fu_1305_p3 + xor_ln18_11_fu_1295_p2);

assign add_ln17_18_fu_1415_p2 = (trunc_ln18_12_fu_1395_p3 + xor_ln18_12_fu_1385_p2);

assign add_ln17_19_fu_1473_p2 = (trunc_ln18_14_fu_1459_p3 + xor_ln18_13_fu_1449_p2);

assign add_ln17_1_fu_558_p2 = (shl_ln17_1_fu_534_p3 + zext_ln17_1_fu_526_p1);

assign add_ln17_2_fu_684_p2 = (shl_ln17_fu_650_p2 + add_ln16_2_fu_644_p2);

assign add_ln17_3_fu_808_p2 = (shl_ln17_2_fu_780_p2 + add_ln16_3_fu_774_p2);

assign add_ln17_4_fu_935_p2 = (shl_ln17_3_fu_901_p2 + add_ln16_4_fu_895_p2);

assign add_ln17_5_fu_1063_p2 = (shl_ln17_4_fu_1029_p2 + add_ln16_5_fu_1023_p2);

assign add_ln17_6_fu_1185_p2 = (shl_ln17_5_fu_1153_p2 + add_ln16_6_fu_1147_p2);

assign add_ln17_7_fu_1275_p2 = (shl_ln17_6_fu_1235_p2 + xor_ln18_6_fu_1229_p2);

assign add_ln17_8_fu_1365_p2 = (shl_ln17_7_fu_1325_p2 + xor_ln18_7_fu_1319_p2);

assign add_ln17_9_fu_1484_p2 = (shl_ln17_8_fu_1479_p2 + xor_ln18_8_reg_1903);

assign add_ln17_fu_478_p2 = (shl_ln_fu_470_p3 + zext_ln17_fu_466_p1);

assign add_ln18_10_fu_1223_p2 = (trunc_ln17_5_fu_1177_p3 + add_ln17_15_fu_1167_p2);

assign add_ln18_11_fu_1313_p2 = (trunc_ln17_7_fu_1267_p3 + xor_ln17_5_fu_1257_p2);

assign add_ln18_12_fu_1403_p2 = (trunc_ln17_9_fu_1357_p3 + xor_ln17_6_fu_1347_p2);

assign add_ln18_13_fu_1467_p2 = (trunc_ln17_10_fu_1441_p3 + xor_ln17_7_fu_1431_p2);

assign add_ln18_14_fu_1565_p2 = (trunc_ln17_12_fu_1534_p3 + xor_ln17_8_fu_1525_p2);

assign add_ln18_15_fu_1581_p2 = (trunc_ln18_16_fu_1557_p3 + xor_ln18_14_fu_1548_p2);

assign add_ln18_1_fu_700_p2 = (zext_ln17_3_fu_662_p1 + xor_ln17_fu_656_p2);

assign add_ln18_2_fu_718_p2 = (trunc_ln17_1_fu_676_p3 + add_ln17_11_fu_666_p2);

assign add_ln18_3_fu_828_p2 = (zext_ln17_4_fu_786_p1 + xor_ln17_1_reg_1872);

assign add_ln18_4_fu_845_p2 = (trunc_ln17_2_fu_800_p3 + add_ln17_12_fu_790_p2);

assign add_ln18_5_fu_955_p2 = (zext_ln17_5_fu_913_p1 + xor_ln17_2_fu_907_p2);

assign add_ln18_6_fu_973_p2 = (trunc_ln17_3_fu_927_p3 + add_ln17_13_fu_917_p2);

assign add_ln18_7_fu_1079_p2 = (zext_ln17_6_fu_1041_p1 + xor_ln17_3_fu_1035_p2);

assign add_ln18_8_fu_1097_p2 = (trunc_ln17_4_fu_1055_p3 + add_ln17_14_fu_1045_p2);

assign add_ln18_9_fu_1205_p2 = (zext_ln17_7_fu_1163_p1 + xor_ln17_4_fu_1159_p2);

assign add_ln18_fu_594_p2 = (trunc_ln1_fu_550_p3 + zext_ln17_2_fu_542_p1);

assign add_ln269_fu_368_p2 = (i_reg_318 + 16'd1);

assign add_ln278_fu_385_p2 = (i_1_reg_329 + 10'd1);

assign add_ln91_fu_1742_p2 = (empty_48_fu_194 + 32'd1);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign grp_hardware_encoder_fu_352_ap_start = grp_hardware_encoder_fu_352_ap_start_reg;

assign hashed_1_fu_1649_p2 = (trunc_ln4_fu_1639_p4 ^ add_ln10_fu_1633_p2);

assign hashed_fu_1627_p2 = (shl_ln20_fu_1603_p2 + xor_ln18_10_fu_1597_p2);

assign i_1_cast_fu_397_p1 = i_1_reg_329;

assign i_3_fu_414_p2 = (ap_phi_mux_i_2_phi_fu_344_p4 + 9'd1);

assign i_cast_fu_380_p1 = i_reg_318;

assign icmp_ln269_fu_374_p2 = ((i_reg_318 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_391_p2 = ((i_1_reg_329 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_420_p2 = ((ap_phi_mux_i_2_phi_fu_344_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_1721_p2 = ((tmp_8_fu_1711_p4 == 26'd0) ? 1'b1 : 1'b0);

assign lshr_ln18_1_fu_564_p4 = {{add_ln17_1_fu_558_p2[31:6]}};

assign lshr_ln18_3_fu_814_p4 = {{add_ln17_3_fu_808_p2[31:6]}};

assign lshr_ln18_4_fu_941_p4 = {{add_ln17_4_fu_935_p2[31:6]}};

assign lshr_ln18_6_fu_1191_p4 = {{add_ln17_6_fu_1185_p2[31:6]}};

assign lshr_ln18_7_fu_1281_p4 = {{add_ln17_7_fu_1275_p2[31:6]}};

assign lshr_ln18_8_fu_1371_p4 = {{add_ln17_8_fu_1365_p2[31:6]}};

assign lshr_ln18_9_fu_1489_p4 = {{add_ln17_9_fu_1484_p2[31:6]}};

assign lshr_ln_fu_484_p4 = {{add_ln17_fu_478_p2[21:6]}};

assign or_ln1_fu_1688_p6 = {{{{{{{{5'd16}, {value_fu_1660_p1}}}, {4'd0}}}, {value_fu_1660_p1}}}, {8'd0}};

assign or_ln87_fu_1767_p2 = (sext_ln87_fu_1763_p1 | my_assoc_mem_upper_key_mem_q0);

assign or_ln88_fu_1774_p2 = (sext_ln87_fu_1763_p1 | my_assoc_mem_middle_key_mem_q0);

assign or_ln89_fu_1781_p2 = (sext_ln87_fu_1763_p1 | my_assoc_mem_lower_key_mem_q0);

assign or_ln_fu_430_p6 = {{{{{trunc_ln301_1_fu_426_p1}, {5'd0}}, {trunc_ln301_1_fu_426_p1}}, {3'd0}}, {trunc_ln301_1_fu_426_p1}};

assign sext_ln87_fu_1763_p1 = $signed(shl_ln87_fu_1758_p2);

assign shl_ln17_1_fu_534_p3 = {{trunc_ln17_fu_530_p1}, {10'd0}};

assign shl_ln17_2_fu_780_p2 = add_ln16_3_fu_774_p2 << 32'd10;

assign shl_ln17_3_fu_901_p2 = add_ln16_4_fu_895_p2 << 32'd10;

assign shl_ln17_4_fu_1029_p2 = add_ln16_5_fu_1023_p2 << 32'd10;

assign shl_ln17_5_fu_1153_p2 = add_ln16_6_fu_1147_p2 << 32'd10;

assign shl_ln17_6_fu_1235_p2 = xor_ln18_6_fu_1229_p2 << 32'd10;

assign shl_ln17_7_fu_1325_p2 = xor_ln18_7_fu_1319_p2 << 32'd10;

assign shl_ln17_8_fu_1479_p2 = xor_ln18_8_reg_1903 << 32'd10;

assign shl_ln17_9_fu_1509_p2 = xor_ln18_9_fu_1503_p2 << 32'd10;

assign shl_ln17_fu_650_p2 = add_ln16_2_fu_644_p2 << 32'd10;

assign shl_ln20_fu_1603_p2 = xor_ln18_10_fu_1597_p2 << 26'd3;

assign shl_ln301_fu_1664_p2 = i_2_reg_340_pp2_iter1_reg << 9'd8;

assign shl_ln87_fu_1758_p2 = 32'd1 << p_load_reg_1928;

assign shl_ln_fu_470_p3 = {{add_ln16_fu_460_p2}, {10'd0}};

assign tmp_1_fu_508_p3 = ap_phi_mux_i_2_phi_fu_344_p4[32'd2];

assign tmp_2_fu_606_p3 = ap_phi_mux_i_2_phi_fu_344_p4[32'd3];

assign tmp_3_fu_754_p3 = i_2_reg_340[32'd4];

assign tmp_4_fu_857_p3 = i_2_reg_340[32'd5];

assign tmp_5_fu_985_p3 = i_2_reg_340[32'd6];

assign tmp_6_fu_1127_p3 = i_2_reg_340[32'd7];

assign tmp_8_fu_1711_p4 = {{empty_48_fu_194[31:6]}};

assign tmp_fu_448_p3 = ap_phi_mux_i_2_phi_fu_344_p4[32'd1];

assign trunc_ln16_4_fu_624_p4 = {{add_ln17_1_fu_558_p2[20:6]}};

assign trunc_ln16_6_fu_730_p4 = {{add_ln17_2_fu_684_p2[20:6]}};

assign trunc_ln16_8_fu_875_p4 = {{add_ln17_3_fu_808_p2[20:6]}};

assign trunc_ln16_s_fu_1003_p4 = {{add_ln17_4_fu_935_p2[20:6]}};

assign trunc_ln17_10_fu_1441_p3 = {{trunc_ln17_21_fu_1437_p1}, {10'd0}};

assign trunc_ln17_11_fu_1515_p4 = {{add_ln17_9_fu_1484_p2[20:6]}};

assign trunc_ln17_12_fu_1534_p3 = {{trunc_ln17_22_fu_1530_p1}, {10'd0}};

assign trunc_ln17_13_fu_546_p1 = add_ln16_1_fu_520_p2[15:0];

assign trunc_ln17_14_fu_672_p1 = add_ln16_2_fu_644_p2[15:0];

assign trunc_ln17_15_fu_796_p1 = add_ln16_3_fu_774_p2[15:0];

assign trunc_ln17_16_fu_923_p1 = add_ln16_4_fu_895_p2[15:0];

assign trunc_ln17_17_fu_1051_p1 = add_ln16_5_fu_1023_p2[15:0];

assign trunc_ln17_18_fu_1173_p1 = add_ln16_6_fu_1147_p2[15:0];

assign trunc_ln17_19_fu_1263_p1 = xor_ln18_6_fu_1229_p2[15:0];

assign trunc_ln17_1_fu_676_p3 = {{trunc_ln17_14_fu_672_p1}, {10'd0}};

assign trunc_ln17_20_fu_1353_p1 = xor_ln18_7_fu_1319_p2[15:0];

assign trunc_ln17_21_fu_1437_p1 = xor_ln18_8_fu_1409_p2[15:0];

assign trunc_ln17_22_fu_1530_p1 = xor_ln18_9_fu_1503_p2[15:0];

assign trunc_ln17_2_fu_800_p3 = {{trunc_ln17_15_fu_796_p1}, {10'd0}};

assign trunc_ln17_3_fu_927_p3 = {{trunc_ln17_16_fu_923_p1}, {10'd0}};

assign trunc_ln17_4_fu_1055_p3 = {{trunc_ln17_17_fu_1051_p1}, {10'd0}};

assign trunc_ln17_5_fu_1177_p3 = {{trunc_ln17_18_fu_1173_p1}, {10'd0}};

assign trunc_ln17_6_fu_1247_p4 = {{add_ln17_6_fu_1185_p2[20:6]}};

assign trunc_ln17_7_fu_1267_p3 = {{trunc_ln17_19_fu_1263_p1}, {10'd0}};

assign trunc_ln17_8_fu_1337_p4 = {{add_ln17_7_fu_1275_p2[20:6]}};

assign trunc_ln17_9_fu_1357_p3 = {{trunc_ln17_20_fu_1353_p1}, {10'd0}};

assign trunc_ln17_fu_530_p1 = add_ln16_1_fu_520_p2[21:0];

assign trunc_ln17_s_fu_1421_p4 = {{add_ln17_8_fu_1365_p2[20:6]}};

assign trunc_ln18_10_fu_1305_p3 = {{trunc_ln18_15_fu_1301_p1}, {10'd0}};

assign trunc_ln18_11_fu_1085_p1 = add_ln16_5_fu_1023_p2[4:0];

assign trunc_ln18_12_fu_1395_p3 = {{trunc_ln18_17_fu_1391_p1}, {10'd0}};

assign trunc_ln18_13_fu_1211_p1 = add_ln16_6_fu_1147_p2[4:0];

assign trunc_ln18_14_fu_1459_p3 = {{trunc_ln18_21_fu_1455_p1}, {10'd0}};

assign trunc_ln18_15_fu_1301_p1 = xor_ln18_6_fu_1229_p2[4:0];

assign trunc_ln18_16_fu_1557_p3 = {{trunc_ln18_22_fu_1553_p1}, {10'd0}};

assign trunc_ln18_17_fu_1391_p1 = xor_ln18_7_fu_1319_p2[4:0];

assign trunc_ln18_18_fu_1571_p4 = {{add_ln17_10_fu_1542_p2[31:6]}};

assign trunc_ln18_19_fu_1587_p4 = {{add_ln17_10_fu_1542_p2[20:6]}};

assign trunc_ln18_1_fu_586_p3 = {{trunc_ln18_2_fu_582_p1}, {10'd0}};

assign trunc_ln18_21_fu_1455_p1 = xor_ln18_8_fu_1409_p2[4:0];

assign trunc_ln18_22_fu_1553_p1 = xor_ln18_9_fu_1503_p2[4:0];

assign trunc_ln18_2_fu_582_p1 = add_ln16_1_fu_520_p2[4:0];

assign trunc_ln18_3_fu_710_p3 = {{trunc_ln18_4_fu_706_p1}, {10'd0}};

assign trunc_ln18_4_fu_706_p1 = add_ln16_2_fu_644_p2[4:0];

assign trunc_ln18_5_fu_837_p3 = {{trunc_ln18_6_fu_833_p1}, {10'd0}};

assign trunc_ln18_6_fu_833_p1 = add_ln16_3_fu_774_p2[4:0];

assign trunc_ln18_7_fu_965_p3 = {{trunc_ln18_8_fu_961_p1}, {10'd0}};

assign trunc_ln18_8_fu_961_p1 = add_ln16_4_fu_895_p2[4:0];

assign trunc_ln18_9_fu_1089_p3 = {{trunc_ln18_11_fu_1085_p1}, {10'd0}};

assign trunc_ln18_fu_578_p1 = add_ln16_1_fu_520_p2[14:0];

assign trunc_ln18_s_fu_1215_p3 = {{trunc_ln18_13_fu_1211_p1}, {10'd0}};

assign trunc_ln1_fu_550_p3 = {{trunc_ln17_13_fu_546_p1}, {10'd0}};

assign trunc_ln20_fu_1615_p1 = xor_ln18_10_fu_1597_p2[11:0];

assign trunc_ln301_1_fu_426_p1 = ap_phi_mux_i_2_phi_fu_344_p4[0:0];

assign trunc_ln3_fu_1619_p3 = {{trunc_ln20_fu_1615_p1}, {3'd0}};

assign trunc_ln4_fu_1639_p4 = {{hashed_fu_1627_p2[25:11]}};

assign trunc_ln_fu_1670_p4 = {{i_2_reg_340_pp2_iter1_reg[7:1]}};

assign valid_fu_1680_p3 = hash_table_q0[32'd32];

assign value_fu_1660_p1 = i_2_reg_340_pp2_iter1_reg[7:0];

assign xor_ln16_1_fu_766_p2 = (lshr_ln18_2_reg_1861 ^ add_ln18_2_reg_1867);

assign xor_ln16_2_fu_885_p2 = (lshr_ln18_3_fu_814_p4 ^ add_ln18_4_fu_845_p2);

assign xor_ln16_3_fu_1013_p2 = (lshr_ln18_4_fu_941_p4 ^ add_ln18_6_fu_973_p2);

assign xor_ln16_4_fu_1139_p2 = (lshr_ln18_5_reg_1882 ^ add_ln18_8_reg_1888);

assign xor_ln16_fu_634_p2 = (lshr_ln18_1_fu_564_p4 ^ add_ln18_fu_594_p2);

assign xor_ln17_1_fu_740_p2 = (trunc_ln16_6_fu_730_p4 ^ add_ln16_8_fu_724_p2);

assign xor_ln17_2_fu_907_p2 = (trunc_ln16_8_fu_875_p4 ^ add_ln16_9_fu_869_p2);

assign xor_ln17_3_fu_1035_p2 = (trunc_ln16_s_fu_1003_p4 ^ add_ln16_10_fu_997_p2);

assign xor_ln17_4_fu_1159_p2 = (trunc_ln16_1_reg_1898 ^ add_ln16_11_reg_1893);

assign xor_ln17_5_fu_1257_p2 = (lshr_ln18_6_fu_1191_p4 ^ add_ln18_10_fu_1223_p2);

assign xor_ln17_6_fu_1347_p2 = (lshr_ln18_7_fu_1281_p4 ^ add_ln18_11_fu_1313_p2);

assign xor_ln17_7_fu_1431_p2 = (lshr_ln18_8_fu_1371_p4 ^ add_ln18_12_fu_1403_p2);

assign xor_ln17_8_fu_1525_p2 = (lshr_ln18_9_fu_1489_p4 ^ add_ln18_13_reg_1909);

assign xor_ln17_fu_656_p2 = (trunc_ln16_4_fu_624_p4 ^ add_ln16_7_fu_618_p2);

assign xor_ln18_10_fu_1597_p2 = (trunc_ln18_18_fu_1571_p4 ^ add_ln18_14_fu_1565_p2);

assign xor_ln18_11_fu_1295_p2 = (trunc_ln17_6_fu_1247_p4 ^ add_ln17_16_fu_1241_p2);

assign xor_ln18_12_fu_1385_p2 = (trunc_ln17_8_fu_1337_p4 ^ add_ln17_17_fu_1331_p2);

assign xor_ln18_13_fu_1449_p2 = (trunc_ln17_s_fu_1421_p4 ^ add_ln17_18_fu_1415_p2);

assign xor_ln18_14_fu_1548_p2 = (trunc_ln17_11_fu_1515_p4 ^ add_ln17_19_reg_1914);

assign xor_ln18_1_fu_600_p2 = (zext_ln18_1_fu_574_p1 ^ add_ln17_1_fu_558_p2);

assign xor_ln18_2_fu_749_p2 = (zext_ln18_2_fu_746_p1 ^ add_ln17_2_reg_1856);

assign xor_ln18_3_fu_851_p2 = (zext_ln18_3_fu_824_p1 ^ add_ln17_3_fu_808_p2);

assign xor_ln18_4_fu_979_p2 = (zext_ln18_4_fu_951_p1 ^ add_ln17_4_fu_935_p2);

assign xor_ln18_5_fu_1122_p2 = (zext_ln18_5_fu_1119_p1 ^ add_ln17_5_reg_1877);

assign xor_ln18_6_fu_1229_p2 = (zext_ln18_6_fu_1201_p1 ^ add_ln17_6_fu_1185_p2);

assign xor_ln18_7_fu_1319_p2 = (zext_ln18_7_fu_1291_p1 ^ add_ln17_7_fu_1275_p2);

assign xor_ln18_8_fu_1409_p2 = (zext_ln18_8_fu_1381_p1 ^ add_ln17_8_fu_1365_p2);

assign xor_ln18_9_fu_1503_p2 = (zext_ln18_9_fu_1499_p1 ^ add_ln17_9_fu_1484_p2);

assign xor_ln18_fu_498_p2 = (zext_ln18_fu_494_p1 ^ add_ln17_fu_478_p2);

assign xor_ln20_fu_1609_p2 = (trunc_ln18_19_fu_1587_p4 ^ add_ln18_15_fu_1581_p2);

assign zext_ln16_10_fu_993_p1 = tmp_5_fu_985_p3;

assign zext_ln16_11_fu_1019_p1 = tmp_5_fu_985_p3;

assign zext_ln16_12_fu_1135_p1 = tmp_6_fu_1127_p3;

assign zext_ln16_13_fu_1143_p1 = tmp_6_fu_1127_p3;

assign zext_ln16_1_fu_456_p1 = tmp_fu_448_p3;

assign zext_ln16_2_fu_504_p1 = xor_ln18_fu_498_p2;

assign zext_ln16_3_fu_516_p1 = tmp_1_fu_508_p3;

assign zext_ln16_4_fu_614_p1 = tmp_2_fu_606_p3;

assign zext_ln16_5_fu_640_p1 = tmp_2_fu_606_p3;

assign zext_ln16_6_fu_762_p1 = tmp_3_fu_754_p3;

assign zext_ln16_7_fu_770_p1 = tmp_3_fu_754_p3;

assign zext_ln16_8_fu_865_p1 = tmp_4_fu_857_p3;

assign zext_ln16_9_fu_891_p1 = tmp_4_fu_857_p3;

assign zext_ln16_fu_444_p1 = or_ln_fu_430_p6;

assign zext_ln17_1_fu_526_p1 = add_ln16_1_fu_520_p2;

assign zext_ln17_2_fu_542_p1 = add_ln16_1_fu_520_p2;

assign zext_ln17_3_fu_662_p1 = tmp_2_fu_606_p3;

assign zext_ln17_4_fu_786_p1 = tmp_3_fu_754_p3;

assign zext_ln17_5_fu_913_p1 = tmp_4_fu_857_p3;

assign zext_ln17_6_fu_1041_p1 = tmp_5_fu_985_p3;

assign zext_ln17_7_fu_1163_p1 = tmp_6_fu_1127_p3;

assign zext_ln17_fu_466_p1 = add_ln16_fu_460_p2;

assign zext_ln18_1_fu_574_p1 = lshr_ln18_1_fu_564_p4;

assign zext_ln18_2_fu_746_p1 = lshr_ln18_2_reg_1861;

assign zext_ln18_3_fu_824_p1 = lshr_ln18_3_fu_814_p4;

assign zext_ln18_4_fu_951_p1 = lshr_ln18_4_fu_941_p4;

assign zext_ln18_5_fu_1119_p1 = lshr_ln18_5_reg_1882;

assign zext_ln18_6_fu_1201_p1 = lshr_ln18_6_fu_1191_p4;

assign zext_ln18_7_fu_1291_p1 = lshr_ln18_7_fu_1281_p4;

assign zext_ln18_8_fu_1381_p1 = lshr_ln18_8_fu_1371_p4;

assign zext_ln18_9_fu_1499_p1 = lshr_ln18_9_fu_1489_p4;

assign zext_ln18_fu_494_p1 = lshr_ln_fu_484_p4;

assign zext_ln60_fu_1655_p1 = hashed_1_fu_1649_p2;

assign zext_ln79_fu_1706_p1 = value_fu_1660_p1;

assign zext_ln88_fu_1727_p1 = trunc_ln_fu_1670_p4;

assign zext_ln89_fu_1732_p1 = shl_ln301_fu_1664_p2;

assign zext_ln90_fu_1737_p1 = empty_48_fu_194;

always @ (posedge ap_clk) begin
    mem_middle_key_mem_addr_reg_1937[8:7] <= 2'b00;
    mem_lower_key_mem_addr_reg_1942[7:0] <= 8'b00000000;
end

endmodule //lzw_stream
